{"version":3,"sources":["reportWebVitals.js","components/REDUX.ts","components/assets/images/time.tsx","components/Flights/SegmentMicroComponents.tsx","components/Flights/Segment.tsx","components/Flights/Flight.tsx","components/Flights/Flights.tsx","components/Sorting/Sorting.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","sorter","sort","transfer0","transfer1","price_from","price_to","airline0","airline1","sorted","data","result","flights","actions","type","store","createStore","state","action","compose","applyMiddleware","thunkMiddleware","TimeIcon","className","xmlns","width","height","d","Blue","props","v","Orange","Line","Destination","dCity","dAirport","dAirportUid","aCity","aAirport","aAirportUid","Time","time","substring","Day","fullDate","Date","date","getDate","toString","month","getMonth","day","getDay","Duration","duration","min","hour","Transfer","transfer","Airline","airline","Segment","dTime","aTime","Flight","price","departureCity1","arrivalCity1","departureAirport1","departureAirportUid1","arrivalAirport1","arrivalAirportUid1","departureTime1","arrivalTime1","duration1","departureCity2","arrivalCity2","departureAirport2","departureAirportUid2","arrivalAirport2","arrivalAirportUid2","arrivalTime2","departureTime2","duration2","transfer2","airline2","Flights","useState","portion","setPortion","stateArray","slice","map","f","flight","total","amount","legs","segments","departureDate","departureCity","caption","departureAirport","uid","arrivalDate","arrivalCity","arrivalAirport","travelDuration","stops","flightToken","onClick","FlightsContainer","dispatch","useDispatch","useSelector","initialSorted","useEffect","actualSorted","filter","length","carrier","a","b","updateSorted","Sorting","handleSubmit","e","getSorterFromForm","target","name","value","lessAirlinePrice0","setLAP0","lessAirlinePrice1","setLAP1","values","actualSorter","Number","actualSorted0","actualSorted1","initialValues","onSubmit","onBlur","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.185790ee.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, compose, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport data from '../components/API/flights.json'\n\nlet initialState = {\n    sorter: {\n        sort: 'increase' as 'increase' | 'decrease' | 'duration',\n        transfer0: false,\n        transfer1: false,\n        price_from: 0,\n        price_to: 30000,\n        airline0: false,\n        airline1: false\n    } as SorterType,\n    sorted: data.result.flights as Array<any>\n}\n\nexport type InitialStateType = typeof initialState\n\nconst REDUX = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'TAS/SET_SORTER':\n            return {\n                ...state,\n                sorter: action.sorter\n            }\n        case 'TAS/SET_SORTED':\n            return {\n                ...state,\n                sorted: action.sorted\n            }\n        default:\n            return state;\n    }\n}\n\n//ACTION\ntype ActionsType = InferActionsType<typeof actions>\n\nexport const actions = {\n    setSorter: (sorter: SorterType) => ({type: 'TAS/SET_SORTER', sorter: sorter} as const),\n    setSorted: (sorted: Array<any>) => ({type: 'TAS/SET_SORTED', sorted: sorted} as const)\n}\n\n//STORE\ntype RootReducerType = typeof REDUX\nexport type AppStateType = ReturnType<RootReducerType>\nexport type InferActionsType<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\nconst store = createStore(REDUX, compose(applyMiddleware(thunkMiddleware)))\n\nexport default store\n\n// TYPES\nexport type SorterType = {\n    sort?: string\n    transfer0?: boolean\n    transfer1?: boolean\n    price_from?: number\n    price_to?: number\n    airline0?: boolean\n    airline1?: boolean\n}","import React from 'react'\nimport '../../../App.css'\n\nexport const TimeIcon = () => {\n    return <div className='icon'>\n        <svg  xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\n            <path\n                d=\"M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8z\"/>\n            <path d=\"M13 7h-2v6h6v-2h-4z\"/>\n        </svg>\n    </div>\n}\n","import React from 'react'\nimport {TimeIcon} from '../assets/images/time'\nimport './Flights.css'\n\nexport const Blue: React.FC<T> = (props) => <div className='blue_text'>{props.v}</div>\nexport const Orange: React.FC<T> = (props) => <div className='orange_text'>{props.v}</div>\nexport const Line: React.FC = () => <div className='line'/>\n\nexport const Destination: React.FC<DestinationProps> = (props) => {\n    return <div className='f__segment__destination'>\n        {props.dCity}, {props.dAirport} <Blue v={'(' + props.dAirportUid + `)  → `}/>\n        {props.aCity}, {props.aAirport} <Blue v={'(' + props.aAirportUid + ')'}/>\n    </div>\n}\n\nexport const Time: React.FC<{ time: string }> = (props) => {\n    const time = props.time.substring(11, 16)\n    return <div className='f__segment__departure_time'>{time}</div>\n}\n\nexport const Day: React.FC<{ time: string }> = (props) => {\n    const fullDate = new Date(props.time)\n    const date = fullDate.getDate().toString()\n    const months = ['янв.', 'фев.', 'мар.', 'апр.', 'май', 'июн.', 'июл.', 'авг.', 'сен.', 'окт.', 'ноя.', 'дек.']\n    const month = months[fullDate.getMonth()]\n    const days = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']\n    const day = days[fullDate.getDay()]\n    return <Blue v={date + ' ' + month + ' ' + day}/>\n}\n\nexport const Duration: React.FC<{ duration: number }> = (props) => {\n    const duration = props.duration\n    const min = duration % 60\n    const hour = (duration - min) / 60\n    return <div className='f__segment__departure_duration'>\n        <TimeIcon/> {hour} ч {min} мин\n    </div>\n}\n\nexport const Transfer: React.FC<{transfer: number }> = (props) => {\n    return <div className='f__segment__transfer'>\n        {props.transfer === 1 ? <Orange v='1 пересадка'/> : <Line/>}\n    </div>\n}\n\nexport const Airline: React.FC <{airline: string}> = (props) => {\n    return <div className='f__segment__airline'>Рейс выполняет: {props.airline}</div>\n}\n\ntype T = {\n    v: string\n}\n\nexport type DestinationProps = {\n    dCity: string\n    aCity: string\n    dAirport: string\n    dAirportUid: string\n    aAirport: string\n    aAirportUid: string\n}","import React from 'react'\nimport {Airline, Day, Destination, DestinationProps, Duration, Time, Transfer} from './SegmentMicroComponents'\nimport './Flights.css'\n\nconst Segment: React.FC<SegmentPropsType> = (props) => {\n    return <div className='f__segment'>\n        <Destination dCity={props.dCity}\n                     aCity={props.aCity}\n                     dAirport={props.dAirport}\n                     dAirportUid={props.dAirportUid}\n                     aAirport={props.aAirport}\n                     aAirportUid={props.aAirportUid}\n        />\n        <div className='f__segment__departure'>\n            <div><Time time={props.dTime}/> <Day time={props.dTime}/></div>\n            <Duration duration={props.duration}/>\n            <div><Day time={props.aTime}/> <Time time={props.aTime}/></div>\n        </div>\n        <Transfer transfer={props.transfer}/>\n        <Airline airline={props.airline}/>\n    </div>\n}\n\nexport default Segment\n\ntype SegmentPropsType = DestinationProps & {\n    aTime: string\n    dTime: string\n    duration: number\n    transfer: number\n    airline: string\n}","import React from 'react'\nimport Segment from './Segment'\nimport './Flights.css'\n\nconst Flight: React.FC<PropsType> = (props) => {\n    return <section className='flight'>\n        <div className='f__header'>\n            <div className='f__header__logo'>logo</div>\n            <div className='f__header__price'>{props.price} {'\\u20BD'}</div>\n            <div className='f__header__notice'>Стоимость для одного взрослого пассажира</div>\n        </div>\n        <Segment dCity={props.departureCity1}\n                 aCity={props.arrivalCity1}\n                 dAirport={props.departureAirport1}\n                 dAirportUid={props.departureAirportUid1}\n                 aAirport={props.arrivalAirport1}\n                 aAirportUid={props.arrivalAirportUid1}\n                 dTime={props.departureTime1}\n                 aTime={props.arrivalTime1}\n                 duration={props.duration1}\n                 transfer={props.transfer1}\n                 airline={props.airline1}\n        />\n        {props.departureCity2 !== 'F' && <Segment dCity={props.departureCity2 as string}\n                                                  aCity={props.arrivalCity2 as string}\n                                                  dAirport={props.departureAirport2 as string}\n                                                  dAirportUid={props.departureAirportUid2 as string}\n                                                  aAirport={props.arrivalAirport2 as string}\n                                                  aAirportUid={props.arrivalAirportUid2 as string}\n                                                  aTime={props.arrivalTime2 as string}\n                                                  dTime={props.departureTime2 as string}\n                                                  duration={props.duration2 as number}\n                                                  transfer={props.transfer2 as number}\n                                                  airline={props.airline2 as string}\n        />}\n        <button className='f__submit'>ВЫБРАТЬ</button>\n    </section>\n}\n\nexport default Flight\n\ntype PropsType = {\n    price: string\n    departureTime1: string\n    departureTime2: string\n    departureCity1: string\n    departureCity2: string\n    departureAirport1: string\n    departureAirport2: string\n    departureAirportUid1: string\n    departureAirportUid2: string\n    arrivalTime1: string\n    arrivalTime2: string\n    arrivalCity1: string\n    arrivalCity2: string\n    arrivalAirport1: string\n    arrivalAirport2: string\n    arrivalAirportUid1: string\n    arrivalAirportUid2: string\n    duration1: number\n    duration2: number\n    transfer1: number\n    transfer2: number\n    airline1: string\n    airline2: string\n}","import React, {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {actions, AppStateType} from '../REDUX'\nimport Flight from './Flight'\nimport './Flights.css'\nimport data from '../API/flights.json'\n\nconst FlightsContainer: React.FC = () => {\n\n    const dispatch = useDispatch()\n    const sorter = useSelector((state: AppStateType) => state.sorter)\n    const sorted = useSelector((state: AppStateType) => state.sorted)\n\n    const initialSorted = data.result.flights as Array<any>\n    const updateSorted = () => {\n        let actualSorted = initialSorted\n\n        actualSorted = [...actualSorted].filter(function (f) {\n            return f.flight.price.total.amount <= sorter.price_to! && f.flight.price.total.amount >= sorter.price_from!\n        })\n\n        if (sorter.transfer0 === true) {\n            actualSorted = [...actualSorted].filter(function (f) {\n                return f.flight.legs[0].segments.length === 1\n            });\n        }\n        if (sorter.transfer1 === true) {\n            actualSorted = [...actualSorted].filter(function (f) {\n                return f.flight.legs[0].segments.length === 2\n            });\n        }\n        if (sorter.airline0 === true) {\n            actualSorted = [...actualSorted].filter(function (f) {\n                return f.flight.carrier.uid === 'LO'\n            });\n        }\n        if (sorter.airline1 === true) {\n            actualSorted = [...actualSorted].filter(function (f) {\n                return f.flight.carrier.uid === 'SU1'\n            });\n        }\n        switch (sorter.sort) {\n            case 'increase':\n                actualSorted = [...actualSorted].sort(function (a: any, b: any) {\n                    return a.flight.price.total.amount - b.flight.price.total.amount\n                })\n                break\n            case 'decrease':\n                actualSorted = [...actualSorted].sort(function (a: any, b: any) {\n                    return b.flight.price.total.amount - a.flight.price.total.amount\n                })\n                break\n            case 'duration':\n                actualSorted = [...actualSorted].sort(function (a: any, b: any) {\n                    return (a.flight.legs[0].duration - b.flight.legs[0].duration)\n                })\n                break\n            default:\n        }\n        dispatch(actions.setSorted(actualSorted))\n    }\n\n    useEffect(() => { // COMPONENT UPDATE\n        updateSorted()\n    }, [sorter])\n\n    return <Flights sorted={sorted}/>\n}\n\nconst Flights: React.FC<{ sorted: Array<any> }> = (props) => {\n    const [portion, setPortion] = useState(2)\n    const stateArray: Array<any> = props.sorted.slice(0, portion)\n\n    return <main className='flight__container'>\n        {stateArray.map((f: any) => <Flight key={f.flightToken}\n                                            price={f.flight.price.total.amount}\n                                            departureTime1={f.flight.legs[0].segments[0].departureDate}\n                                            departureCity1={f.flight.legs[0].segments[0].departureCity.caption}\n                                            departureAirport1={f.flight.legs[0].segments[0].departureAirport.caption}\n                                            departureAirportUid1={f.flight.legs[0].segments[0].departureAirport.uid}\n                                            arrivalTime1={f.flight.legs[0].segments[0].arrivalDate}\n                                            arrivalCity1={f.flight.legs[0].segments[0].arrivalCity.caption}\n                                            arrivalAirport1={f.flight.legs[0].segments[0].arrivalAirport.caption}\n                                            arrivalAirportUid1={f.flight.legs[0].segments[0].arrivalAirport.uid}\n                                            duration1={f.flight.legs[0].segments[0].travelDuration}\n                                            transfer1={f.flight.legs[0].segments[0].stops}\n                                            airline1={f.flight.legs[0].segments[0].airline.caption}\n\n                                            departureTime2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].departureDate : 'F'}\n                                            departureCity2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].departureCity.caption : 'F'}\n                                            departureAirport2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].departureAirport.caption : 'F'}\n                                            departureAirportUid2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].departureAirport.uid : 'F'}\n                                            arrivalTime2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].arrivalDate : 'F'}\n                                            arrivalCity2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].arrivalCity.caption : 'F'}\n                                            arrivalAirport2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].arrivalAirport.caption : 'F'}\n                                            arrivalAirportUid2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].arrivalAirport.uid : 'F'}\n                                            duration2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].travelDuration : 'F'}\n                                            transfer2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].stops : 'F'}\n                                            airline2={f.flight.legs[0].segments[1] ? f.flight.legs[0].segments[1].airline.caption : 'F'}\n        />)}\n        <button className='f__more' onClick={() => setPortion(portion + 2)}>Показать еще</button>\n    </main>\n}\n\nexport default FlightsContainer","import React, {useEffect, useState} from 'react'\nimport './Sorting.css'\nimport {Formik, Form, Field} from 'formik'\nimport {actions, AppStateType, SorterType} from '../REDUX'\nimport {useDispatch, useSelector} from 'react-redux'\n\nconst Sorting: React.FC = () => {\n    const dispatch = useDispatch()\n    const setSorter = (LocalSorter: SorterType) => {\n        dispatch(actions.setSorter(LocalSorter))\n    }\n    const handleSubmit = (e: any) => {\n        getSorterFromForm(e.target.name, e.target.value)\n    }\n    const sorter = useSelector((state: AppStateType) => state.sorter)\n    const sorted = useSelector((state: AppStateType) => state.sorted) // to get less airline price\n\n    const [lessAirlinePrice0, setLAP0] = useState(0)\n    const [lessAirlinePrice1, setLAP1] = useState(0)\n\n    const getSorterFromForm = (name: string, values: any) => {\n        if (values === 'true') {\n            values = false\n        } else if (values === 'false') {\n            values = true\n        }\n        let actualSorter = sorter\n        switch (name) {\n            case 'sort':\n                actualSorter = {...actualSorter, sort: values}\n                break\n            case 'transfer0':\n                actualSorter = {...actualSorter, transfer0: values}\n                break\n            case 'transfer1':\n                actualSorter = {...actualSorter, transfer1: values}\n                break\n            case 'price_from':\n                actualSorter = {...actualSorter, price_from: Number(values)}\n                break\n            case 'price_to':\n                actualSorter = {...actualSorter, price_to: Number(values)}\n                break\n            case 'airline0':\n                actualSorter = {...actualSorter, airline0: values}\n                break\n            case 'airline1':\n                actualSorter = {...actualSorter, airline1: values}\n                break\n            default:\n        }\n        if ({...actualSorter} !== {...sorter}) {\n            setSorter(actualSorter)\n        }\n    }\n\n    useEffect(() => { // less airline price\n        let actualSorted0 = [...sorted].filter(function (f) {\n            return f.flight.carrier.uid === 'LO'\n        })\n        let actualSorted1 = [...sorted].filter(function (f) {\n            return f.flight.carrier.uid === 'SU1'\n        })\n        actualSorted0 = [...actualSorted0].sort(function (a: any, b: any) {\n            return a.flight.price.total.amount - b.flight.price.total.amount\n        })\n        actualSorted1 = [...actualSorted1].sort(function (a: any, b: any) {\n            return a.flight.price.total.amount - b.flight.price.total.amount\n        })\n        setLAP0(actualSorted0[0].flight.price.total.amount)\n        setLAP1(actualSorted1[0].flight.price.total.amount)\n    }, [])\n\n\n    return <aside>\n        <Formik\n            initialValues={sorter}\n            onSubmit={handleSubmit}>\n            {() => (\n                <Form className='sorting__container'>\n                    <div className='s__items'>\n                        <h4>Сортировать</h4>\n                        <label><Field type=\"radio\" name='sort' value='increase' onClick={handleSubmit}/>- по возрастанию\n                            цены</label>\n                        <label><Field type=\"radio\" name='sort' value='decrease' onClick={handleSubmit}/>- по убыванию\n                            цены</label>\n                        <label><Field type=\"radio\" name='sort' value='duration' onClick={handleSubmit}/>- во времени в\n                            пути</label>\n                    </div>\n                    <div className='s__items'>\n                        <h4>Фильтровать</h4>\n                        <label><Field type=\"checkbox\" name='transfer0' onClick={handleSubmit}/>- без пересадок</label>\n                        <label><Field type=\"checkbox\" name='transfer1' onClick={handleSubmit}/>- 1 пересадка</label>\n                    </div>\n                    <div className='s__items'>\n                        <h4>Цена</h4>\n                        <label>От <Field className='s__price' type='number' name='price_from' min={0}\n                                         onBlur={handleSubmit}/></label>\n                        <label>До <Field className='s__price' type='number' name='price_to' min={0}\n                                         onBlur={handleSubmit}/></label>\n                    </div>\n                    <div className='s__items'>\n                        <h4>Авиакомпании</h4>\n                        <div className='row'><label className='s__airline__label'><Field type=\"checkbox\" name='airline0' onClick={handleSubmit}/>\n                            - LOT Polish Airlines </label><div className='s__airline__price'> от {lessAirlinePrice0} р.</div></div>\n                        <div className='row'><label className='s__airline__label'><Field type=\"checkbox\" name='airline1' onClick={handleSubmit}/>\n                            - Аэрофлот - российские авиалинии </label><div className='s__airline__price'> от {lessAirlinePrice1} р.</div></div>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    </aside>\n}\n\nexport default Sorting","import React from 'react'\nimport './App.css'\nimport FlightsContainer from './components/Flights/Flights'\nimport Sorting from './components/Sorting/Sorting'\nimport {Provider} from 'react-redux'\nimport store from './components/REDUX'\n\nconst App: React.FC = () => {\n    return <Provider store={store}>\n        <div className='app-wrapper'>\n            <Sorting/>\n            <FlightsContainer/>\n        </div>\n    </Provider>\n}\n\nexport default App","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}